import{_ as e,Y as a,Z as d,a2 as i}from"./framework-d651fda7.js";const s={},t=i(`<h1 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h1><h2 id="docker安装" tabindex="-1"><a class="header-anchor" href="#docker安装" aria-hidden="true">#</a> docker安装</h2><ol><li>查询postgresql镜像</li></ol><div class="language-doc line-numbers-mode" data-ext="doc"><pre class="language-doc"><code>docker search postgres
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://pcsdata.baidu.com/thumbnail/d5e27ccd3i7f1ee0ac7e41dc52ca59c1?fid=2519193222-16051585-823073532458912&amp;rt=pr&amp;sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-Zhd2SeugR7He7v4MF%2FTkORLe9%2F8%3D&amp;expires=48h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=8739909908731115863&amp;dp-callid=0&amp;time=1679288400&amp;bus_no=26&amp;size=c1600_u1600&amp;quality=100&amp;vuk=-&amp;ft=video" alt="查询结果" tabindex="0" loading="lazy"><figcaption>查询结果</figcaption></figure><blockquote><p>NAME --镜像名称<br> DESCRIPTION --镜像描述<br> STARS --标星数<br> OFFICIAL --官方的<br> AUTOMATED -- 自动化</p></blockquote><ol start="2"><li>拉取文件镜像</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker pull postgres:14.7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>制作容器</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run --name postgres14.7 -e POSTGRES_PASSWORD=159357 -p 5432:5432 -v /usr/local/docker/pgdata:/var/lib/postgresql14.7/data -d postgres:14.7 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>run ：创建并运行一个容器；<br> –name ：指定容器名称。（容器名称 自己设置）<br> -e POSTGRES_PASSWORD=password，设置环境变量，指定数据库的登录口令为password（password 自己设置）<br> -p ：指定宿主机和 Docker 容器端口映射，冒号前为宿主机端口号，另一个是容器端口号。（Docker的容器默认情况下只能由本地主机访问，即A主机上的容器不能被B主机访问，所以要做端口映射）（端口号 自己设置）<br> -v 冒号&quot;:&quot;前面的目录是宿主机目录，后面的目录是容器内目录<br> -d postgres：指定使用postgres作为镜像</p></blockquote><ol start="4"><li>进入容器创建角色</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker exec -it e43e247b1ed4 bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>切换用户</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>su postgres
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>创建sonar用户</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>createuser -P -e root

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>创建sonar数据库</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>create database sonar owner=root;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="8"><li>查看数据库</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\\l
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,21),l=[t];function r(n,c){return a(),d("div",null,l)}const u=e(s,[["render",r],["__file","安装.html.vue"]]);export{u as default};
